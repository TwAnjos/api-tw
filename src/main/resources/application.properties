#Banco aws - Tw -----------------------------------
#spring.datasource.url= jdbc:mysql://${RDS_HOSTNAME:localhost}:${RDS_PORT:3306}/${RDS_DB_NAME:cityondb-local}
spring.datasource.url= jdbc:mysql://cityondb.cgmit2opdqlu.us-east-1.rds.amazonaws.com:3306/cityondb

#spring.datasource.username=${RDS_USERNAME:cityonapi}
$spring.datasource.username=cityonapi
#spring.datasource.password=${RDS_PASSWORD:Q$7#Q$7#Q$7#}
spring.datasource.password=#osaQ$7#osaQ$7

#spring.datasource.url= jdbc:mysql://db-tw-mysql-aws.cmurz2ftj6aa.us-east-2.rds.amazonaws.com:3306/dbtw
#spring.datasource.username=root
#spring.datasource.password=#####
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#testar depois do deploy
#add estas variaveis em Elastic Beanstalk> Ambientes > Ambienteteste-env >Configuração > Propriedades de ambiente 

#add asim e pode chamar assim no spring : se não encontrar nada coloca isso
#RDS_HOSTNAME           rds.hostname    : nome alternativo
tw.rds1=${rds.hostname:nullo}

#RDS_USERNAME
tw.rds2=${rds.username:nullo}

#RDS_PASSWORD
tw.rds3=${rds.password:nullo}

#esse foi só um teste pra ver se vem mais coisas do ambiente
tw.rds4=${SPRING_JPA_HIBERNATE_DDL_AUTO:nullo}

#RDS_DB_NAME
tw.rds5=${rds.db.name:nullo}

#RDS_PORT
tw.rds6=${rds.port:nullo}

tw.oquevemdaqui1=${SPRING.JPA.HIBERNATE.DDL.AUTO:localhost}
tw.oquevemdaqui2=${spring.jpa.hiberate.ddl.auto:3306}
tw.oquevemdaqui3=${tw.ddl:cityondb-local}
#obs1  Parece que é só trocar o _ por . que funciona aqui
#obs2  pelo teste do rds4 pode se utilizar identico ao que foi salvo em Propriedades de ambiente.

#JPA --- Hibernate---------------------------------
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL8Dialect

#create-drop, create, none, update, validate. 
spring.jpa.hibernate.ddl-auto= nome

#Show or not log for each sql query
#spring.jpa.show-sql = true

#O OSIV Anti-Padrão
spring.jpa.open-in-view=false





